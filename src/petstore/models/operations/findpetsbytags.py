"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import pet as shared_pet
from typing import List, Optional


@dataclasses.dataclass
class FindPetsByTagsRequest:
    tags: Optional[List[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tags', 'style': 'form', 'explode': True }})
    r"""Tags to filter by"""
    



@dataclasses.dataclass
class FindPetsByTagsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    two_hundred_application_json_classes: Optional[List[shared_pet.Pet]] = dataclasses.field(default=None)
    r"""successful operation"""
    body: Optional[bytes] = dataclasses.field(default=None)
    

